#!/usr/bin/env bash

# MIT license (c) 2021-2024 https://github.com/slowpeek
# Homepage: https://github.com/slowpeek/jetopt

set -eu

SCRIPT_VERSION=1.0b+git

version() {
    echo "jetopt ${SCRIPT_VERSION}"
    exit
}

usage() {
    cat <<EOF
Friendly options formatter for getopt

Options:
  -h, --help                 Show usage
  -V, --version              Show version

If the first arg is not among those above, the args list is treated as short and
long options description in jetopt syntax. The output is values for
corresponding -o and -l getopt options.

Sample output:
  > jetopt hhelp .label: q Vversion
  -o hqV -l help,label:,version

More details on jetopt syntax https://github.com/slowpeek/jetopt
EOF

    exit
}

main() {
    case ${1-} in
        -V|--version)
            version ;;
        -h|--help)
            usage ;;
    esac

    local arg type mode='' short='' long=''

    while (( $# )); do
        arg=$1

        case $arg in
            -*)
                # Break on any literal option or '--'
                break ;;

            ,*)
                # Scanning mode.
                [[ $arg == ,[+-] ]] && mode=${arg:1} ;;

            *)
                # Option type.
                type=${arg##*[!:]}
                arg=${arg%"$type"}

                # Short option, if present.
                [[ $arg == .* ]] || short+=${arg::1}$type
                arg=${arg:1}

                # Long option, if present.
                [[ -z $arg ]] || long+=,$arg$type
        esac

        shift
    done

    local args=()

    if [[ -n $short || -n $long ]]; then
        short=$mode$short

        [[ -z $short ]] || args+=(-o "$short")
        [[ -z $long ]] || args+=(-l "${long:1}")
    fi

    echo "${args[@]}" "$@"
}

[[ ! ${BASH_SOURCE[0]} == "$0" ]] || main "$@"
